.popoutUpdateInfo {
    .background {
        //blur whole window
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        -moz-backdrop-filter: blur(2px);
        -webkit-backdrop-filter: blur(2px);
        backdrop-filter: blur(2px);
        z-index: 999;
    }

    .alert {
        position: fixed;
        display: flex;
        flex-direction: column;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 50vw;
        background-color: #ffffff;
        border: 2px solid rgb(92, 92, 92);
        border-radius: 2rem;
        padding: 20px;
        z-index: 1000;
        justify-content: center;
        align-items: center;
        background-color: #EDEEE9;

        .title {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            font-size: 3rem;
            font-weight: bold;
        }

        .titletext {
            display: flex;
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 10px;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            color: black;
        }

        .positiveIcon {
            color: rgb(24, 224, 24);
        }

        .negativeIcon {
            color: rgb(221, 18, 18);
        }

        .message {
            font-size: 1.2rem;
            padding-bottom: 1rem;
            text-align: center;
            color: rgb(58, 58, 58);
        }

        .buttons {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;

            .confirm {
                border-radius: 2rem;
                width: 7rem;
                font-size: 1.2rem;
                padding: 0.5rem;
                background-color: rgb(24, 224, 24);
                cursor: pointer;
                color: rgb(31, 30, 30);
                border: none;

                &:hover {
                    background-color: rgb(0, 255, 0);
                }
            }

            .cancel {
                border-radius: 2rem;
                width: 7rem;
                font-size: 1.2rem;
                padding: 0.5rem;
                background-color: rgb(221, 18, 18);
                color: whitesmoke;
                cursor: pointer;
                border: none;

                &:hover {
                    background-color: rgb(255, 0, 0);
                }
            }
        }
    }

    $black: #303030;
    $grey: #909090;
    $off-white: #EDEEE9;
    $code: #D8DBCE;
    position: relative;
    overflow-x: hidden;
    scroll-behavior: smooth;
    $sans-serif: 'Inter', sans-serif;
    background-color: $off-white;
  
    
    .form {
        align-self: center;
      }
     
      // I would use the BEM method here for declaring styles,
      // but for the sake of clarity, I decided not to.*
    
      // Just some basic input field styling.
      .form__input {
        width: clamp(120px, 50vw, 420px);
        height: 2.5rem;
        padding: 0 1.25rem;
        border: 1px solid $black;
        border-radius: 2px;
        margin: 0.625rem auto;
        transition: all 250ms;
        @media (min-width: 768px) {
          width: clamp(120px, 35vw, 420px);
        }
        
        // This is basically saying when the form__input class is in focus
        &:focus {
          outline: none;
          border-top-color: rgba(0,0,0,0.1);
        }
        
        // How to read this:
        /* When the input field (.form__input) is in focus, 
           transform the .form__label and change colors*/
        /* ALSO, if the input field's placeholder is NOT shown (when the input field has content),
           transform the .form__label and change colors. */
        &:focus + .form__label, &:not(:placeholder-shown) + .form__label {
          transform: translateY(-4.50rem) scale(1);
          color: $black;
        }
        
        /* THIS PART IS IMPORTANT!! */
        /* The block below hides the placeholder entirely. */
        /* For all intents and purposes, the placeholder no longer exists. */
        /* What shows on the input field is only the label*. */
        /* HOWEVER, the input fields still recognizes that the placeholder exists!*/
        /* The placeholder is just invisible. We need the placeholder to exist for
           some weird CSS stuff. If we skip this, we can't make it CSS-only. */
        &::placeholder {
            display: none;
            color: transparent;
          
            // Prevents users from highlighting the placeholder.
            -webkit-user-select: none; /* Safari */
            -ms-user-select: none; /* IE 10 and IE 11 */
            user-select: none; /* Standard syntax */
        }
        
        // How to read this:
        /* When the placeholder is NOT shown,
           style the top border. */
        /* This makes the top border fade-out when the placeholder disappears. */
        &:not(:placeholder-shown) {
          border-top-color: rgba(0, 0, 0, 0.5);
        }
      }
  
      .form__label {
        font-size: 1rem;
        color: $grey;
        display: block;
        
        /* Moves the label on TOP of the placeholder */
        /* You'll need to change this as needed */
        transform: translate(1.25rem,-2.5rem);
        transform-origin: 0 0; /* Used later for transitions */
        transition: all 500ms;
        
        // Prevents users from highlighting the label.
        -webkit-user-select: none; /* Safari */
        -ms-user-select: none; /* IE 10 and IE 11 */
        user-select: none; /* Standard syntax */
        
        /* THIS PART IS IMPORTANT! */
        /* This line prevents the label from being selected.*/
        /* This is crucial because if this line doesn't exist, users can
           click on the label, instead of the input field. That's bad UX! */
        pointer-events: none; 
      }

      body {
        background: hsl(220deg, 10%, 97%);
        margin: 0;
        padding: 0;
      }

      .buttons-container {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      
      button {
        background: white;
        border: solid 2px black;
        padding: 0.1em 0.1em;
        font-size: 0.5rem;
      }
      
      .button-arounder {
        font-size: 1.5rem;
        background: hsl(190deg, 30%, 15%);
        color: hsl(190deg, 10%, 95%);
        
        box-shadow: 0 0px 0px hsla(190deg, 15%, 5%, .2);
        transfrom: translateY(0);
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
        
        --dur: .15s;
        --delay: .15s;
        --radius: 16px;
        
        transition:
          border-top-left-radius var(--dur) var(--delay) ease-out,
          border-top-right-radius var(--dur) calc(var(--delay) * 2) ease-out,
          border-bottom-right-radius var(--dur) calc(var(--delay) * 3) ease-out,
          border-bottom-left-radius var(--dur) calc(var(--delay) * 4) ease-out,
          box-shadow calc(var(--dur) * 4) ease-out,
          transform calc(var(--dur) * 4) ease-out,
          background calc(var(--dur) * 4) steps(4, jump-end);
      }
      
      .button-arounder:hover,
      .button-arounder:focus {
        box-shadow: 0 4px 8px hsla(190deg, 15%, 5%, .2);
        transform: translateY(-4px);
        background: hsl(230deg, 50%, 45%);
        border-top-left-radius: var(--radius);
        border-top-right-radius: var(--radius);
        border-bottom-left-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
      }
}
